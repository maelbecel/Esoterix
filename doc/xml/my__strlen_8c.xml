<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="my__strlen_8c" kind="file" language="C++">
    <compoundname>my_strlen.c</compoundname>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>lib/my/my_strlen.c</label>
        <link refid="my__strlen_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="my__strlen_8c_1a3b3960588932459570799afa357e32b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int my_strlen</definition>
        <argsstring>(char const *str)</argsstring>
        <name>my_strlen</name>
        <param>
          <type>char const *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Get the lenth of a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to check</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of the string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/my/my_strlen.c" line="10" column="5" bodyfile="lib/my/my_strlen.c" bodystart="10" bodyend="17"/>
        <referencedby refid="get__functions_8c_1a331ee9f33563f4477d7dd800d6f57914" compoundref="get__functions_8c" startline="19" endline="31">__py__get_func</referencedby>
        <referencedby refid="lib_2my_2my_8h_1aa786ac9ee00076459ce23bc37bdf2430" compoundref="concat_8c" startline="13" endline="25">concat</referencedby>
        <referencedby refid="lib_2myprintf_2printf_8h_1a2ad0a95479688134062d3fad17c7c805" compoundref="myprintf_2displaystr_8c" startline="22" endline="27">displaystr</referencedby>
        <referencedby refid="my__show__word__array_8c_1acfc5d69edef049c3fe6c3a4a724654d2" compoundref="my__putstr_8c" startline="11" endline="15">my_putstr</referencedby>
        <referencedby refid="my__strcmp_8c_1a12d4044e7c0ab78ca1f186e0abdb08c6" compoundref="my__strcmp_8c" startline="12" endline="21">my_strcmp</referencedby>
        <referencedby refid="my__strdup_8c_1a1a42d9b749358a7c132f87a9502a948d" compoundref="my__strdup_8c" startline="14" endline="22">my_strdup</referencedby>
        <referencedby refid="my__strstr_8c_1a97396eb13250cce5cf8513f5e6a7dbf1" compoundref="my__strstr_8c" startline="12" endline="28">my_strstr</referencedby>
      </memberdef>
      <memberdef kind="function" id="my__strlen_8c_1a7ea2710ab7129b43157020dc39934ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int my_strarraylen</definition>
        <argsstring>(char const **str)</argsstring>
        <name>my_strarraylen</name>
        <param>
          <type>char const **</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/my/my_strlen.c" line="19" column="5" bodyfile="lib/my/my_strlen.c" bodystart="19" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>EPITECH<sp/>PROJECT,<sp/>2021</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>my_swap.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>File<sp/>description:</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>my<sp/>swap</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="my__strstr_8c_1a3b3960588932459570799afa357e32b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="my__strlen_8c_1a3b3960588932459570799afa357e32b5" kindref="member">my_strlen</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="my__strlen_8c_1a7ea2710ab7129b43157020dc39934ab3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="my__strlen_8c_1a7ea2710ab7129b43157020dc39934ab3" kindref="member">my_strarraylen</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**str)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[i]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/my/my_strlen.c"/>
  </compounddef>
</doxygen>
